org: chopar
app: aws-node-http-api-project
service: product-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
          - "arn:aws:dynamodb:us-east-1:653231333242:table/Products"
          - "arn:aws:dynamodb:us-east-1:653231333242:table/Stock"
        - Effect: Allow
          Action:
            - sqs:*
          Resource:
            - Fn::GetAtt: [SQSQueue, Arn]
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            Ref: SNSTopic
  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: choparzs@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic


functions:
  getProductList:
    handler: index.getProductList
    events:
      - httpApi:
          path: /products
          method: get
  getProductById:
    handler: index.getProductById
    events:
      - httpApi:
          path: /products/{productId}
          method: get
  createProduct:
    handler: index.createProduct
    events:
      - httpApi:
          path: /products
          method: post
  catalogBatchProcess:
    handler: index.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
